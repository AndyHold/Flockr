# Routes

# Home page
GET          /                                                  controllers.Assets.at(path="/public/vue-front-end-goes-here", file="index.html")

# Auth routes
POST         /api/auth/users/signup               controllers.AuthController.signup(request: Request)
POST         /api/auth/users/login                controllers.AuthController.login(request: Request)
POST         /api/auth/users/logout               controllers.AuthController.logout(request: Request)
POST        /api/auth/users/:userId/logout        controllers.AuthController.logoutById(userId: Int, request: Request)
GET          /api/auth/users/:email/available     controllers.AuthController.checkEmailAvailable(email: String)

# Traveller routes

# TODO - remove this
GET          /api/users/all                                     controllers.UserController.getAllTravellers()


GET          /api/users                                         controllers.UserController.getTravellers()
GET          /api/users/search                                  controllers.UserController.searchTravellers(request: Request)
GET          /api/users/nationalities                           controllers.UserController.getNationalities(request: Request)
GET          /api/users/passports                               controllers.UserController.getAllPassports(request: Request)
GET          /api/users/types                                   controllers.UserController.getTravellerTypes(request: Request)
GET          /api/users/roles                                   controllers.RoleController.getAllRoles(request: Request)
GET          /api/users/:userId/roles                           controllers.RoleController.getUsersRoles(userId: Int, request: Request)
GET          /api/users/:userId                                 controllers.UserController.getTraveller(userId: Int, request: Request)
PATCH        /api/users/:userId                                 controllers.UserController.updateTraveller(userId: Int, request: Request)
DELETE       /api/users/:userId                                 controllers.UserController.deleteUser(userId: Int, request: Request)
PATCH        /api/users/:userId/roles                           controllers.UserController.updateTravellerRole(userId: Int, request: Request)

# Destination Routes
GET         /api/destinations                                   controllers.DestinationController.getDestinations(request: Request)
GET         /api/destinations/countries                         controllers.DestinationController.getCountries()
GET         /api/destinations/countries/:countryId/districts    controllers.DestinationController.getDistricts(countryId: Int)
GET         /api/destinations/types                             controllers.DestinationController.getDestinationTypes()
GET         /api/destinations/:destinationId                    controllers.DestinationController.getDestination(destinationId: Int, request: Request)
DELETE      /api/destinations/:destinationId                    controllers.DestinationController.deleteDestination(destinationId: Int, request: Request)

POST        /api/destinations                                   controllers.DestinationController.addDestination(request: Request)
PUT         /api/destinations/:destinationId                    controllers.DestinationController.updateDestination(request: Request, destinationId: Int)

# Trip Routes
GET         /api/users/:userId/trips                  controllers.TripController.getTrips(request: Request, userId: Int)
POST        /api/users/:userId/trips                  controllers.TripController.addTrip(userId: Int, request: Request)
DELETE      /api/users/:userId/trips/:tripId          controllers.TripController.deleteTrip(userId: Int, tripId : Int, request : Request)
GET         /api/users/:userId/trips/:tripId          controllers.TripController.getTrip(userId: Int, tripId: Int, request: Request)
PUT         /api/users/:userId/trips/:tripId          controllers.TripController.updateTrip(request: Request, userId: Int, tripId : Int)


# Map static resources from the /public folder to the /assets URL path
GET          /assets/*file                                      controllers.Assets.at(path="/public", file)

GET          /*file                                             controllers.FrontendController.assetOrDefault(file)
